// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _420DA3_A24_Projet.DataAccess.Contexts;

#nullable disable

namespace _420DA3_A24_Projet.Migrations
{
    [DbContext(typeof(WsysDbContext))]
    partial class WsysDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AddressClient", b =>
                {
                    b.Property<int>("AddressesId")
                        .HasColumnType("int");

                    b.Property<int>("ClientsId")
                        .HasColumnType("int");

                    b.HasKey("AddressesId", "ClientsId");

                    b.HasIndex("ClientsId");

                    b.ToTable("AddressClient");
                });

            modelBuilder.Entity("UserRoles", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("_420DA3_A24_Projet.Business.Domain.Address", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    b.Property<string>("AddressType")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("AddressType")
                        .HasColumnOrder(1);

                    b.Property<string>("Addresse")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("Addresse")
                        .HasColumnOrder(2);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("City")
                        .HasColumnOrder(5);

                    b.Property<string>("CivicNumber")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("CivicNumber")
                        .HasColumnOrder(3);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("Country")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateCreated")
                        .HasColumnOrder(9)
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DateDeleted")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateDeleted")
                        .HasColumnOrder(11);

                    b.Property<DateTime?>("DateModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateModified")
                        .HasColumnOrder(10);

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("PostalCode")
                        .HasColumnOrder(8);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("State")
                        .HasColumnOrder(6);

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("ContactLastName")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.ToTable("Addresses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressType = "Commercial",
                            Addresse = "We Store You Sell Inc Entrepot 0001",
                            City = "Montreal",
                            CivicNumber = "7777",
                            Country = "Canada",
                            DateCreated = new DateTime(1, 1, 1, 5, 0, 0, 0, DateTimeKind.Utc),
                            PostalCode = "H0E 1H1",
                            State = "Quebec",
                            Street = "Destiny Street"
                        });
                });

            modelBuilder.Entity("_420DA3_A24_Projet.Business.Domain.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("ClientName")
                        .HasColumnOrder(2);

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("ContactEmail")
                        .HasColumnOrder(6);

                    b.Property<string>("ContactFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("ContactFirstName")
                        .HasColumnOrder(4);

                    b.Property<string>("ContactLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("ContactLastName")
                        .HasColumnOrder(5);

                    b.Property<string>("ContactTelephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("ContactTelephone")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateCreated")
                        .HasColumnOrder(8)
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DateDeleted")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateDeleted")
                        .HasColumnOrder(10);

                    b.Property<DateTime?>("DateModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateModified")
                        .HasColumnOrder(9);

                    b.Property<int?>("EmployeeWarehouseId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("RowVersion")
                        .HasColumnOrder(11);

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int")
                        .HasColumnName("WarehouseId ")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("EmployeeWarehouseId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Clients", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientName = "MISA DARK JARJAR",
                            ContactEmail = "darkjarjar@gmail.com",
                            ContactFirstName = "Binks",
                            ContactLastName = "Jar Jar",
                            ContactTelephone = "450450450",
                            DateCreated = new DateTime(2024, 12, 20, 5, 26, 42, 468, DateTimeKind.Utc).AddTicks(6954),
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 2,
                            ClientName = "SUPREME KADI",
                            ContactEmail = "ilesmenar@gmail.com",
                            ContactFirstName = "Iles",
                            ContactLastName = "Menar",
                            ContactTelephone = "450450470",
                            DateCreated = new DateTime(2024, 12, 20, 5, 26, 42, 468, DateTimeKind.Utc).AddTicks(6961),
                            WarehouseId = 1
                        });
                });

            modelBuilder.Entity("_420DA3_A24_Projet.Business.Domain.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("AimQuantity")
                        .HasColumnType("int")
                        .HasColumnName("AimQuanity")
                        .HasColumnOrder(9);

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("ClientId")
                        .HasColumnOrder(5);

                    b.Property<string>("CodeUPC")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("CodeUPC")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateCreated")
                        .HasColumnOrder(11)
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DateDeleted")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateDeleted")
                        .HasColumnOrder(13);

                    b.Property<DateTime?>("DateModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateModified")
                        .HasColumnOrder(12);

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Desc")
                        .HasColumnOrder(2);

                    b.Property<string>("PictureName")
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("PictureName")
                        .HasColumnOrder(4);

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ProductName")
                        .HasColumnOrder(1);

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("Quantity")
                        .HasColumnOrder(8);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("RowVersion")
                        .HasColumnOrder(14);

                    b.Property<string>("SupplierCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("SupplierCode")
                        .HasColumnOrder(7);

                    b.Property<int>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("SupplierId")
                        .HasColumnOrder(6);

                    b.Property<double>("Weight")
                        .HasColumnType("float")
                        .HasColumnName("Weight")
                        .HasColumnOrder(10);

                    b.HasKey("ProductId");

                    b.HasIndex("ClientId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            AimQuantity = 100,
                            ClientId = 1,
                            CodeUPC = "103833038446",
                            DateCreated = new DateTime(1, 1, 1, 5, 0, 0, 0, DateTimeKind.Utc),
                            Desc = "Une chaise sibole",
                            PictureName = "default",
                            ProductName = "Chaise",
                            Quantity = 50,
                            SupplierCode = "acode",
                            SupplierId = 1,
                            Weight = 50.0
                        },
                        new
                        {
                            ProductId = 2,
                            AimQuantity = 100,
                            ClientId = 2,
                            CodeUPC = "10212343521",
                            DateCreated = new DateTime(1, 1, 1, 5, 0, 0, 0, DateTimeKind.Utc),
                            Desc = "Une qui fait BOOM BOOM",
                            PictureName = "default",
                            ProductName = "Radio Stero",
                            Quantity = 30,
                            SupplierCode = "bcode",
                            SupplierId = 2,
                            Weight = 50.0
                        },
                        new
                        {
                            ProductId = 3,
                            AimQuantity = 100,
                            ClientId = 2,
                            CodeUPC = "10212343502",
                            DateCreated = new DateTime(1, 1, 1, 5, 0, 0, 0, DateTimeKind.Utc),
                            Desc = "Un bureau magnifique",
                            PictureName = "default",
                            ProductName = "Table de bureau",
                            Quantity = 20,
                            SupplierCode = "bcode",
                            SupplierId = 2,
                            Weight = 50.0
                        });
                });

            modelBuilder.Entity("_420DA3_A24_Projet.Business.Domain.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CompletionDate")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("CompletionDate")
                        .HasColumnOrder(5);

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateCreated")
                        .HasColumnOrder(6)
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DateDeleted")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateDeleted")
                        .HasColumnOrder(7);

                    b.Property<DateTime?>("DateModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateModified")
                        .HasColumnOrder(8);

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductId")
                        .HasColumnOrder(2);

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("Quantity")
                        .HasColumnOrder(4);

                    b.Property<byte[]>("RowVersion")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("Status")
                        .HasColumnOrder(1);

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int")
                        .HasColumnName("WarehouseId")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("WarehouseId");

                    b.ToTable("PurchaseOrders", (string)null);
                });

            modelBuilder.Entity("_420DA3_A24_Projet.Business.Domain.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateCreated")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DateDeleted")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateDeleted")
                        .HasColumnOrder(5);

                    b.Property<DateTime?>("DateModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateModified")
                        .HasColumnOrder(4);

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("RoleDescription")
                        .HasColumnOrder(2);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("RoleName")
                        .HasColumnOrder(1);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("RowVersion")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(1, 1, 1, 5, 0, 0, 0, DateTimeKind.Utc),
                            RoleDescription = "Les supers utilisateurs",
                            RoleName = "Administrateur"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(1, 1, 1, 5, 0, 0, 0, DateTimeKind.Utc),
                            RoleDescription = "Boss of paperwork",
                            RoleName = "Employé de bureau"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(1, 1, 1, 5, 0, 0, 0, DateTimeKind.Utc),
                            RoleDescription = "Les masters du lourd",
                            RoleName = "Employé d'entrepôt"
                        });
                });

            modelBuilder.Entity("_420DA3_A24_Projet.Business.Domain.Shipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateCreated")
                        .HasColumnOrder(5)
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DateDeleted")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateDeleted")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("DateModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateModified")
                        .HasColumnOrder(7);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("RowVersion")
                        .HasColumnOrder(8);

                    b.Property<int>("ShippingOrderId")
                        .HasColumnType("int")
                        .HasColumnName("ShippingOrderId")
                        .HasColumnOrder(3);

                    b.Property<string>("ShippingService")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("ShippingService")
                        .HasColumnOrder(2);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("Status")
                        .HasColumnOrder(1);

                    b.Property<string>("TrackingNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("TrackingNumber")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("ShippingOrderId")
                        .IsUnique();

                    b.ToTable("Shipments", (string)null);
                });

            modelBuilder.Entity("_420DA3_A24_Projet.Business.Domain.ShippingOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatorEmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("CreatorEmployeeId")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateCreated")
                        .HasColumnOrder(6)
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DateDeleted")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateDeleted")
                        .HasColumnOrder(7);

                    b.Property<DateTime?>("DateModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateModified")
                        .HasColumnOrder(8);

                    b.Property<int>("DestinationAdressId")
                        .HasColumnType("int")
                        .HasColumnName("DestinationAdressId")
                        .HasColumnOrder(3);

                    b.Property<int?>("FulfillerEmployeeId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("FulfillerEmployeeId")
                        .HasColumnOrder(4);

                    b.Property<byte[]>("RowVersion")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("ShipmentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShippingDate")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("ShippingDate")
                        .HasColumnOrder(5)
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("SourceClientId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("Status")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("FulfillerEmployeeId");

                    b.HasIndex("SourceClientId");

                    b.ToTable("ShippingOrders", (string)null);
                });

            modelBuilder.Entity("_420DA3_A24_Projet.Business.Domain.ShippingOrderProduct", b =>
                {
                    b.Property<int>("ShippingOrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("ShippingOrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ShippingOrderProduct");
                });

            modelBuilder.Entity("_420DA3_A24_Projet.Business.Domain.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SupplierId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("ContactEmail")
                        .HasColumnOrder(4);

                    b.Property<string>("ContactFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("ContactFirstName")
                        .HasColumnOrder(3);

                    b.Property<string>("ContactLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("ContactLastName")
                        .HasColumnOrder(2);

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ContactPhone")
                        .HasColumnOrder(5);

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateCreated")
                        .HasColumnOrder(6)
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DateDeleted")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateDeleted")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("DateModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateModified")
                        .HasColumnOrder(7);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("RowVersion")
                        .HasColumnOrder(9);

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("SupplierName")
                        .HasColumnOrder(1);

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers", (string)null);

                    b.HasData(
                        new
                        {
                            SupplierId = 1,
                            ContactEmail = "jonhytest@gmail.com",
                            ContactFirstName = "Jonhy",
                            ContactLastName = "Test",
                            ContactPhone = "4503497684",
                            DateCreated = new DateTime(1, 1, 1, 5, 0, 0, 0, DateTimeKind.Utc),
                            SupplierName = "THE ULTIMATE SUPPLIER"
                        },
                        new
                        {
                            SupplierId = 2,
                            ContactEmail = "davisamel@gmail.com",
                            ContactFirstName = "Amel",
                            ContactLastName = "Davis",
                            ContactPhone = "2903497684",
                            DateCreated = new DateTime(1, 1, 1, 5, 0, 0, 0, DateTimeKind.Utc),
                            SupplierName = "THE BEST SUPPLIER"
                        });
                });

            modelBuilder.Entity("_420DA3_A24_Projet.Business.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateCreated")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DateDeleted")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateDeleted")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("DateModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateModified")
                        .HasColumnOrder(5);

                    b.Property<int?>("EmployeeWarehouseId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeWarehouseId")
                        .HasColumnOrder(3);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("PasswordHash")
                        .HasColumnOrder(2);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("RowVersion")
                        .HasColumnOrder(7);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("Username")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("EmployeeWarehouseId");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasDatabaseName("unique_index_username");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(1, 1, 1, 5, 0, 0, 0, DateTimeKind.Utc),
                            PasswordHash = "7761467A80A38D8429C0B80898FE3047F1E85E1C0CB2A9304FF72D028D39FF4D:8C68F80262A76FDB8E595A6212B3545A:100000:SHA256",
                            Username = "hunter"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(1, 1, 1, 5, 0, 0, 0, DateTimeKind.Utc),
                            PasswordHash = "4ECAA597B625B3FCA7E36442D4C6A3EB05AB9DFFC9F254EE483FBDBEB6D2910C:D761ED59218EDF8032D7F7882DE44EAE:100000:SHA256",
                            Username = "deiiidia"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(1, 1, 1, 5, 0, 0, 0, DateTimeKind.Utc),
                            EmployeeWarehouseId = 1,
                            PasswordHash = "6A8EFEE80A6B9FE951105B1105A01E9BDC17BBA64ED70E36C6499713641CF6D4:172AAB90868D82E03834D8C43F6799B0:100000:SHA256",
                            Username = "maximus"
                        });
                });

            modelBuilder.Entity("_420DA3_A24_Projet.Business.Domain.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int")
                        .HasColumnName("AddressId")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateCreated")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DateDeleted")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateDeleted")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("DateModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateModified")
                        .HasColumnOrder(5);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("RowVersion")
                        .HasColumnOrder(6);

                    b.Property<string>("WareHouseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("WarehouseName")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.ToTable("Warehouses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 1,
                            DateCreated = new DateTime(1, 1, 1, 5, 0, 0, 0, DateTimeKind.Utc),
                            WareHouseName = "Entrepot For Bessy"
                        });
                });

            modelBuilder.Entity("AddressClient", b =>
                {
                    b.HasOne("_420DA3_A24_Projet.Business.Domain.Address", null)
                        .WithMany()
                        .HasForeignKey("AddressesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_420DA3_A24_Projet.Business.Domain.Client", null)
                        .WithMany()
                        .HasForeignKey("ClientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UserRoles", b =>
                {
                    b.HasOne("_420DA3_A24_Projet.Business.Domain.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_420DA3_A24_Projet.Business.Domain.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_420DA3_A24_Projet.Business.Domain.Address", b =>
                {
                    b.HasOne("_420DA3_A24_Projet.Business.Domain.ShippingOrder", "OwnerShipOrder")
                        .WithOne("DestinationAddress")
                        .HasForeignKey("_420DA3_A24_Projet.Business.Domain.Address", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OwnerShipOrder");
                });

            modelBuilder.Entity("_420DA3_A24_Projet.Business.Domain.Client", b =>
                {
                    b.HasOne("_420DA3_A24_Projet.Business.Domain.Warehouse", "EmployeeWarehouse")
                        .WithMany()
                        .HasForeignKey("EmployeeWarehouseId");

                    b.HasOne("_420DA3_A24_Projet.Business.Domain.Warehouse", "AssignedWarehouse")
                        .WithMany("Clients")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedWarehouse");

                    b.Navigation("EmployeeWarehouse");
                });

            modelBuilder.Entity("_420DA3_A24_Projet.Business.Domain.Product", b =>
                {
                    b.HasOne("_420DA3_A24_Projet.Business.Domain.Client", "Client")
                        .WithMany("Products")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_420DA3_A24_Projet.Business.Domain.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("_420DA3_A24_Projet.Business.Domain.PurchaseOrder", b =>
                {
                    b.HasOne("_420DA3_A24_Projet.Business.Domain.Warehouse", "Warehouse")
                        .WithMany("RestockOrders")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_420DA3_A24_Projet.Business.Domain.Product", "OrderedProduct")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderedProduct");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("_420DA3_A24_Projet.Business.Domain.Shipment", b =>
                {
                    b.HasOne("_420DA3_A24_Projet.Business.Domain.ShippingOrder", "ShippingOrder")
                        .WithOne("Shipment")
                        .HasForeignKey("_420DA3_A24_Projet.Business.Domain.Shipment", "ShippingOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShippingOrder");
                });

            modelBuilder.Entity("_420DA3_A24_Projet.Business.Domain.ShippingOrder", b =>
                {
                    b.HasOne("_420DA3_A24_Projet.Business.Domain.User", "FulfillerEmployee")
                        .WithMany("FulfilledShipOrders")
                        .HasForeignKey("FulfillerEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_420DA3_A24_Projet.Business.Domain.User", "CreatorEmployee")
                        .WithMany("CreatedShipOrders")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_420DA3_A24_Projet.Business.Domain.Client", "SourceClient")
                        .WithMany("ShippingOrders")
                        .HasForeignKey("SourceClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatorEmployee");

                    b.Navigation("FulfillerEmployee");

                    b.Navigation("SourceClient");
                });

            modelBuilder.Entity("_420DA3_A24_Projet.Business.Domain.ShippingOrderProduct", b =>
                {
                    b.HasOne("_420DA3_A24_Projet.Business.Domain.Product", "Product")
                        .WithMany("ShippingOrderProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_420DA3_A24_Projet.Business.Domain.ShippingOrder", "ShippingOrder")
                        .WithMany("ShippingOrderProducts")
                        .HasForeignKey("ShippingOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ShippingOrder");
                });

            modelBuilder.Entity("_420DA3_A24_Projet.Business.Domain.User", b =>
                {
                    b.HasOne("_420DA3_A24_Projet.Business.Domain.Warehouse", "EmployeeWarehouse")
                        .WithMany("WarehouseEmployees")
                        .HasForeignKey("EmployeeWarehouseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("EmployeeWarehouse");
                });

            modelBuilder.Entity("_420DA3_A24_Projet.Business.Domain.Warehouse", b =>
                {
                    b.HasOne("_420DA3_A24_Projet.Business.Domain.Address", "Adresse")
                        .WithOne("OwnerWarehouse")
                        .HasForeignKey("_420DA3_A24_Projet.Business.Domain.Warehouse", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adresse");
                });

            modelBuilder.Entity("_420DA3_A24_Projet.Business.Domain.Address", b =>
                {
                    b.Navigation("OwnerWarehouse")
                        .IsRequired();
                });

            modelBuilder.Entity("_420DA3_A24_Projet.Business.Domain.Client", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("ShippingOrders");
                });

            modelBuilder.Entity("_420DA3_A24_Projet.Business.Domain.Product", b =>
                {
                    b.Navigation("PurchaseOrders");

                    b.Navigation("ShippingOrderProducts");
                });

            modelBuilder.Entity("_420DA3_A24_Projet.Business.Domain.ShippingOrder", b =>
                {
                    b.Navigation("DestinationAddress")
                        .IsRequired();

                    b.Navigation("Shipment");

                    b.Navigation("ShippingOrderProducts");
                });

            modelBuilder.Entity("_420DA3_A24_Projet.Business.Domain.Supplier", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("_420DA3_A24_Projet.Business.Domain.User", b =>
                {
                    b.Navigation("CreatedShipOrders");

                    b.Navigation("FulfilledShipOrders");
                });

            modelBuilder.Entity("_420DA3_A24_Projet.Business.Domain.Warehouse", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("RestockOrders");

                    b.Navigation("WarehouseEmployees");
                });
#pragma warning restore 612, 618
        }
    }
}
